# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           		controllers.HomeController.index

# An example controller showing how to write asynchronous code
GET     /message             	   		controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               		controllers.Assets.versioned(path="/public", file: Asset)

GET     /loginpage                  		controllers.AuthController.loginPage()
POST   	/login        			    		controllers.AuthController.login()
GET   	/logout           		    		controllers.AuthController.logout()
POST   	/signup           		    		controllers.AuthController.signup()
POST		/save/qp/account					controllers.AuthController.saveQPAccount()
POST		/save/inspector/account			controllers.AuthController.saveInspectorAccount()
POST		/block/account					controllers.AuthController.blockAccount()
POST		/unblock/account					controllers.AuthController.unBlockAccount()
POST		/delete/account					controllers.AuthController.deleteAccount()
GET		/account/active					controllers.AuthController.activeAccount(token: String ?= "")

GET   	/companys           				controllers.CompanyController.companys(offset: Integer ?= 0)
GET 		/create/company			   		controllers.CompanyController.createCompany(companyId: Long ?= 0)
POST		/save/company			    		controllers.CompanyController.saveCompany()
GET     /company/show/letterhead    		controllers.CompanyController.showLetterHead(uuid: String ?= "", isLarge: Boolean ?= false)
GET     /company/show/logo          		controllers.CompanyController.showLogo(uuid: String ?= "", isLarge: Boolean ?= false)
POST 	/company/set/admin				controllers.CompanyController.assignAccountForCompany()
GET 		/qplist							controllers.CompanyController.qpList(offset: Integer ?= 0)
GET 		/create/qp/account				controllers.CompanyController.createQPAccount(qpAccountId: Long ?= 0)
GET 		/create/inspector/account		controllers.CompanyController.createInspectorAccount(inspectorAccountId: Long ?= 0)
GET 		/inspectors						controllers.CompanyController.inspectors(offset: Integer ?= 0)
GET 		/company							controllers.CompanyController.company()
POST 	/save/company/basic				controllers.CompanyController.saveCompanyBasic()
POST 	/upload/company/logo				controllers.CompanyController.uploadLogo()
GET 		/engineer/add					controllers.CompanyController.addEngineerPage()
POST 	/add/engineer					controllers.CompanyController.addEngineer()
POST 	/remove/engineer					controllers.CompanyController.removeEngineer()
POST 	/search/account					controllers.CompanyController.searchAccount()
GET 		/doc/formats						controllers.CompanyController.documentFormat()
GET		/download/file					controllers.CompanyController.downloadFile(uuid: String ?= "")
GET		/download/doc/thumbnail			controllers.CompanyController.downloadDocThumbnail(uuid: String ?= "")

GET		/engineer/projects				controllers.ProjectController.projectOfEngineer(offset: Integer ?= 0)
GET		/company/projects				controllers.ProjectController.projectOfCompany(offset: Integer ?= 0)
GET		/create/project					controllers.ProjectController.createProject(projectId: Long ?= 0)
POST 	/search/qp						controllers.ProjectController.searchQP()
POST 	/search/inspector				controllers.ProjectController.searchInspector()
POST 	/save/project					controllers.ProjectController.saveProject()
POST		/archive/project					controllers.ProjectController.archiveProject()
POST		/complete/project				controllers.ProjectController.projectCompleted()
POST 	/remove/client					controllers.ProjectController.removeClient()
POST 	/remove/builder					controllers.ProjectController.removeBuilder()
POST 	/add/client						controllers.ProjectController.addClient()
POST 	/add/builder						controllers.ProjectController.addBuilder()
POST 	/add/team						controllers.ProjectController.addTeam()
POST 	/remove/team						controllers.ProjectController.removeTeam()
GET 		/project/execution				controllers.ProjectController.projectExecution(offset: Integer ?= 0)
GET 		/project/drawing/file			controllers.ProjectController.drawingFile(projectId: Long ?= 0)
POST 		/project/upload/drawingfile		controllers.ProjectController.uploadDrawingFile()


GET 		/mom/checklist/formwork			controllers.DocFormatController.momChecklistFormWork()
GET 		/mom/checklist/gondola			controllers.DocFormatController.momChecklistGondola()
GET 		/mom/checklist/mcwp				controllers.DocFormatController.momChecklistMCWP()
GET 		/mom/checklist/scaffold			controllers.DocFormatController.momChecklistScaffold()
GET 		/mom/cos/scaffold				controllers.DocFormatController.momCOSScaffold()
GET 		/mom/cos/gondola					controllers.DocFormatController.momCOSGondola()
GET 		/mom/cos/mcwp					controllers.DocFormatController.momCOSMCWP()
GET 		/mom/cos/formwork				controllers.DocFormatController.momCOSFormwork()

GET		/create/cos						controllers.COSController.createCOS(projectId: Long ?= 0)
POST		/save/cos						controllers.COSController.saveCOS()






